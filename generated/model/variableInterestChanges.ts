/**
 * PortX ORCA Account Management
 * PortX ORCA semantic and interaction is based on ISO 20022 and restricted to the US banking domain. The scope covers the following communication flows: bank account opening, maintenance, closing and reporting. In many cases, the financial institution will require additional documentation that is available as PDF or Word document. The recommended solution is to group one ORCA message (for example the account opening request) with these accompanying documents in one file archive. The archive establishes the link between the different documents. Every ORCA request message has an attribute to support the ISO 20022 digital signature.  
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: betiana.darderes@portx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { VariableInterestCalculation } from './variableInterestCalculation';
import { Frequency } from './frequency';


/**
 * Specifies the parameters to be used for variable interest. Details of frequency for interest rate adjustment. 
 */
export interface VariableInterestChanges { 
    /**
     * Number of days prior to the event to do a review. 
     */
    leadDays?: number;
    /**
     * Next date at which the interest rate is to be adjusted. 
     */
    nextChangeDate?: string;
    /**
     * Last date at which the interest rate was adjusted. 
     */
    lastChangeDate?: string;
    changes?: Array<VariableInterestCalculation>;
    /**
     * Identifies the reference index for the debt instrument. 
     */
    referenceRateName?: string;
    /**
     * Specifies the type of interest rate. Some ISO 20022 compliant values are: Fixed, Forfeit, Variable, StepUp, Scheduled, Unscheduled, Discount, FixedRateUnderlyingExposureForLife, FixedRateUnderlyingExposureWithCompulsoryFutureSwitchToFloating, FixedWithFuturePeriodicResets, FloatingLinkedToIndex, FloatingRateUnderlyingExposureForLife, FloatingRateUnderlyingExposureWithCap, FloatingRateUnderlyingExposureWithFloor, FloatingRateUnderlyingExposureWithFloorAndCap, Modular, ObligorSwapped, SwicthOptionality, Tiered, StepFrequency, RateIndex, IndexFrequency. 
     */
    rateType?: string;
    /**
     * Specifies the variable interest method. Possible Values:  PointSpread, FactorSpread, PercentageVariance, NotPercentageVariance. 
     */
    calculationMethod?: string;
    /**
     * Percentage factor used to calculate the rate changes. If the spread entered is 13.000 and the rate in the specification is 11.0000%, the rate over will be 12.4300% (11 x 1.13). If the spread entered is -13.000, the rate over will be 9.5700% (11 x .87). 
     */
    spread?: string;
    /**
     * Provides the number of basis points added to (if positive) or deducted from (if negative) the underlying reference rate to calculate the actual interest rate applicable. Basis points are a unit of measurement used to describe the change in interest rates. One basis point is equal to 0.01%, or one hundredth of a percent. Therefore, 50 basis points is equivalent to 0.50%, and 100 basis points is equivalent to 1%. 
     */
    basisPointSpread?: number;
    /**
     * Percentage to be added to or deducted from the index rate to calculate the effective rate. If the point spread entered is 1.5000 and the rate in the specification is 11.0000%, the rate over will be 12.5000%. If the point spread entered is -1.5000, the rate over will be 9.5000%.  
     */
    pointSpread?: string;
    /**
     * Identification of the product offered by a financial institution to its customers. 
     */
    productId?: string;
    /**
     * Date on which the new interest rate change will be effective. 
     */
    effectiveDate?: string;
    /**
     * Date on which the new interest rate change will be effective. 
     */
    frequency?: Frequency;
    /**
     * Indicates whether the rate only increases. 
     */
    increaseOnlyIndicator?: boolean;
    /**
     * Rate of interest finalized from the higher range of rates. 
     */
    ceilingRate?: string;
    /**
     * Rate of interest finalized from the lower range of rates. 
     */
    floorRate?: string;
}

