/**
 * PortX ORCA Account Management
 * PortX ORCA semantic and interaction is based on ISO 20022 and restricted to the US banking domain. The scope covers the following communication flows: bank account opening, maintenance, closing and reporting. In many cases, the financial institution will require additional documentation that is available as PDF or Word document. The recommended solution is to group one ORCA message (for example the account opening request) with these accompanying documents in one file archive. The archive establishes the link between the different documents. Every ORCA request message has an attribute to support the ISO 20022 digital signature.  
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: betiana.darderes@portx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { RelatedCard } from './relatedCard';
import { AccountRenewal } from './accountRenewal';
import { FinancialStatement } from './financialStatement';
import { StandingOrder } from './standingOrder';
import { AccountIdentification } from './accountIdentification';
import { ChargeCalculation } from './chargeCalculation';
import { Collateral } from './collateral';
import { Tax } from './tax';
import { InterestCalculation } from './interestCalculation';
import { ServicerAlert } from './servicerAlert';
import { AccountPayment } from './accountPayment';
import { AccountHistory } from './accountHistory';
import { SpotDate } from './spotDate';
import { AccountBillDetails } from './accountBillDetails';
import { Comment } from './comment';
import { AccountPrintOptions } from './accountPrintOptions';
import { AccountDetailedStatus } from './accountDetailedStatus';
import { AccountContactDetails } from './accountContactDetails';
import { AccountContract } from './accountContract';
import { GenericAccountCode } from './genericAccountCode';
import { CommunicationChannel } from './communicationChannel';
import { Audit } from './audit';
import { Restriction } from './restriction';
import { RoutingNumber } from './routingNumber';
import { Limit } from './limit';
import { AccountProfile } from './accountProfile';
import { RelatedAccount } from './relatedAccount';
import { AccountPayout } from './accountPayout';
import { Balance } from './balance';
import { AccountDetailedParty } from './accountDetailedParty';


/**
 * Record of transactions in specific types of assets, maintained by a servicing party on behalf of one or more owning parties. Business relationship between an account servicer and one or more account owners. 
 */
export interface Account { 
    /**
     * Identification of the account servicer institution at branch level or center level. To overlay the codes to produce a unique identifier the following expresion is used: BranchRegionCode-BranchSubdivisionCode. 
     */
    accountBranchId?: string;
    /**
     * The account number or Basic Bank Account Number (BBAN). A Basic Bank Account Number (BBAN) is a bank account number that includes the domestic bank code, branch identifier, and account number. It is a unique identifier for a bank account within a specific country. 
     */
    accountNumber?: string;
    /**
     * Type of the account. Some possible ISO 20022 compliant values are:   Checking,  CardAccount,  CashPayment,   Charges,   CashIncome,   Commission,   ClearingParticipantSettlementAccount,  LimitedLiquiditySavingsAccount,  MarginalLending,   MoneyMarket,   NonResidentExternal,   Overdraft,   OverNightDeposit,   Settlement,   Salary,   Savings,   Tax,   TransactingAccount,  CashTrading,  VirtualAccount,  CreditCard,  DebitCard,  Universal,   Investment,   EpurseCard,  CertificateOfDeposit,  MoneyMarketChecking,   RetirementAccount,   StockOrBond,  PrePaid,   FleetCard,   Cash,   DebitAccount,   CreditAccount,   Benefit,  HealthSavingsAccount,  FlexibleSpendingAccount,  ForBenefitOf,  Estate,  ClientTrustAccount,   LawyersTrustAccount,  KeoghPlanAccount,  UniformTransfersToMinorsAct,  UniformGiftsToMinorsAct,  ReserveFunds,  SelfDirectedBrokerage,  IRA,  Annuity,  ExternalAccount,  Loan. 
     */
    accountType: string;
    routingNumbers?: Array<RoutingNumber>;
    identifiers?: Array<AccountIdentification>;
    /**
     * Indicates whether the Account is secure. 
     */
    securedIndicator?: boolean;
    /**
     * Indicates how the account is secured. Possible Values: Collateral, Agent 
     */
    securedType?: string;
    payment?: AccountPayment;
    payout?: AccountPayout;
    /**
     * Specifies the type of account ownership. Possible ISO 20022 compliant values names are:  JointAccountWithSurvivorshipRights, JointAccountInCommon, CustodialAccount, SingleOwnerAccount, JointAccount, Corporation, Organization, Business, FormalPartnership, FormalTrust, Nominee, NonProfitOrganization, NotForProfitOrganization, ForProfit, EUResidualEntity, USGovernmentOrganization, GovernmentOrganization, LimitedLiabilityCompany, RegisteredInvestmentCompany, Entrepreneurial, Unincorporated, LimitedPartnership, LimitedLiabilityPartnership, BareOwner, Usufructuary, Fiduciary, ServicerEmployeeAccount, BusinessTrust, FamilyTrust, Estate, PublicFunds, NonUSGovernmentOrganization, Church, Club. More general possible values: Direct, Indirect.  
     */
    ownershipType: string;
    /**
     * Account Balance Type. Possible Values: Asset, positive transaction amount increases balance; Liability,  positive transaction amount decreases balance; Equity. 
     */
    balanceType?: string;
    /**
     * Identification of the product offered by a financial institution to its customers. 
     */
    productId?: string;
    /**
     * Name of the account. It provides an additional means of identification, and is designated by the account servicer in agreement with the account owner.
     */
    name?: string;
    accountPurpose?: string;
    /**
     * Three contiguous letters for the representation of currencies and funds. Valid currency codes are registered with the ISO 4217 Maintenance Agency.  
     */
    currency?: string;
    /**
     * Number of monetary units where the size of the decimal part is defined by the currency. Note:  total number of digits: 21 number of digits in fractional part: 8 maxInclusive: 9999999999999.99999999 minInclusive: -9999999999999.99999999 
     */
    initialAmount?: string;
    /**
     * Initial desposit date
     */
    depositDate?: string;
    contract?: AccountContract;
    parties: Array<AccountDetailedParty>;
    /**
     * A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format.
     */
    maturityDate?: string;
    relatedAccounts?: Array<RelatedAccount>;
    /**
     * Account used as a reference for the account opening. 
     */
    referenceAccount?: string;
    pastDates?: Array<SpotDate>;
    /**
     * Projected account dates. Possible values: AnticipatedPayOff. 
     */
    projectedDates?: Array<SpotDate>;
    restrictions?: Array<Restriction>;
    limits?: Array<Limit>;
    statement?: FinancialStatement;
    interests?: Array<InterestCalculation>;
    charges?: Array<ChargeCalculation>;
    taxes?: Array<Tax>;
    communicationChannels?: Array<CommunicationChannel>;
    /**
     * This id gives the ability to view a partyâ€™s total relationship with the bank. The relationship Id ties multiple parties and accounts together. This code is also used to reduce mailing costs during marketing campaigns to avoid sending duplicate materials to parties residing at the same address. 
     */
    relationshipId?: string;
    codes?: Array<GenericAccountCode>;
    print?: AccountPrintOptions;
    bill?: AccountBillDetails;
    collateral?: Collateral;
    contact?: AccountContactDetails;
    renewal?: AccountRenewal;
    /**
     * Account alerts to be received by the account servicer.
     */
    servicerAlerts?: Array<ServicerAlert>;
    history?: AccountHistory;
    status: AccountDetailedStatus;
    /**
     * Additional information that cannot be captured in the structured elements and/or any other specific block. If this information need to be converted in ISO Messages, must be ISO 20022 compliant: it requires development of a compliant message extension model and its components must be registered in the ISO 20022 Data Dictionary. https://www.iso20022.org/catalogue-messages/additional-content-messages/supplementary-data 
     */
    supplementaryData?: object;
    /**
     * Bank commnents of the account. 
     */
    comments?: Array<Comment>;
    profile?: AccountProfile;
    /**
     * Specifies the date and time at which the all the balances amount were calculated.
     */
    ammountCalculationDate?: string;
    /**
     * Specifies the date and time of transaction events.
     */
    transactionDates?: Array<SpotDate>;
    balances?: Array<Balance>;
    /**
     * Number of plastic cards issued which are associated to the account. 
     */
    plasticCount?: number;
    /**
     * Payment cards related to the account. Debit cards, for loans or current accounts. Credit cards, for credit card accounts. 
     */
    cards?: Array<RelatedCard>;
    /**
     * Identification assigned by the account service institution (Servicer). Could be encoded (UUID). Also may be used as composite account identifier when overlaying the account code parts. <branch-type-subtype-number>         
     */
    readonly accountId: string;
    /**
     * Instructions given by an account holder to an account servicer to make regular transfers on given dates to the same beneficiary. 
     */
    standingOrders?: Array<StandingOrder>;
    audit?: Audit;
}

