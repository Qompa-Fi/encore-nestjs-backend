/**
 * PortX ORCA Account Management
 * PortX ORCA semantic and interaction is based on ISO 20022 and restricted to the US banking domain. The scope covers the following communication flows: bank account opening, maintenance, closing and reporting. In many cases, the financial institution will require additional documentation that is available as PDF or Word document. The recommended solution is to group one ORCA message (for example the account opening request) with these accompanying documents in one file archive. The archive establishes the link between the different documents. Every ORCA request message has an attribute to support the ISO 20022 digital signature.  
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: betiana.darderes@portx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { GenericIdentification } from './genericIdentification';
import { GenericCode } from './genericCode';
import { Frequency } from './frequency';
import { Period } from './period';
import { Balance } from './balance';


/**
 * Credit Card statement details.
 */
export interface CreditCardStatement { 
    /**
     * The frequency of the regular statement. 
     */
    frequency?: Frequency;
    /**
     * Channel used to communicate with a party. Possible Values: Email, Fax, File, Online, PostalService, LiveSupport, ATM, IVR, Kiosk, Mobile, OnlineBanking, Phone, SMS, Card, InPerson, Operator, VRU, Telebanc, Notice, ExceptionReport, Statement, TextMessage, Teller, Walkin, Voice, Web, Retailer, WesternUnion, Electronic, CenterView. 
     */
    communicationMethod?: string;
    /**
     * Specifies a choice of format for a document. Possible Values: PDF, HTML 
     */
    format?: string;
    /**
     * Codes related to statements or internal handling codes asociated with the statement. Possible Values: CombinedCode, SpecialStatement, DetailsFormat, StatementGroup, ProfitabilityOption. 
     */
    codes?: Array<GenericCode>;
    /**
     * Identification of statement instances and related. Possible values: schemeName: LastCombinedStatement, CombinedStatementAccountId 
     */
    identifiers?: Array<GenericIdentification>;
    /**
     * Template used to create the statement document. This is an external code provided by the account servicer.  
     */
    templateCode?: string;
    lastStatementPeriod?: Period;
    nextStatementPeriod?: Period;
    /**
     * The date of the last statement. 
     */
    lastStatementDate?: string;
    /**
     * The date of the statement previous from the last. 
     */
    previousStatementDate?: string;
    /**
     * The date of the last regular statement. 
     */
    lastRegularStatementDate?: string;
    truncationOptions?: Array<string>;
    /**
     * Indicates whether the account name is printed on the statement.
     */
    accountNameIndicator?: boolean;
    /**
     * Statement total amounts
     */
    readonly balances?: Array<Balance>;
    /**
     * Language of the contact person. Names according to the language list provided in the ISO 639-1 codes. Some possible values: Chinese, Spanish, French, English, Japanese, Italian, German, Default. 
     */
    preferredLanguage?: string;
    /**
     * Indicates whether account transactions are printed on a combined statement. Possible combinations: CheckingStatement, SavingsSatement, PrimaryAccount, SecondaryAccount. 
     */
    combineType?: string;
    /**
     * The balance calculated at the end of the billing cycle up to the payment closing date. 
     */
    statementBalance?: string;
    /**
     * Last day of your billing cycle.
     */
    paymentClosingDate?: string;
    /**
     * The date by which is needed to pay the issuer to avoid interest charges. 
     */
    paymentDueDate?: string;
    /**
     * The minimum monthly payment is the lowest amount a customer can pay on their revolving credit account per month to remain in good standing with the credit card company. 
     */
    minimumPayment?: string;
    /**
     * A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format.
     */
    lastPaymentDate?: string;
    /**
     * Number of monetary units where the size of the decimal part is defined by the currency. Note:  total number of digits: 21 number of digits in fractional part: 8 maxInclusive: 9999999999999.99999999 minInclusive: -9999999999999.99999999 
     */
    lastPaymentAmount?: string;
}

