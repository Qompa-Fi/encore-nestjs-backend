/**
 * PortX ORCA Account Management
 * PortX ORCA semantic and interaction is based on ISO 20022 and restricted to the US banking domain. The scope covers the following communication flows: bank account opening, maintenance, closing and reporting. In many cases, the financial institution will require additional documentation that is available as PDF or Word document. The recommended solution is to group one ORCA message (for example the account opening request) with these accompanying documents in one file archive. The archive establishes the link between the different documents. Every ORCA request message has an attribute to support the ISO 20022 digital signature.  
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: betiana.darderes@portx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { PaymentIdentification } from './paymentIdentification';
import { PaymentProcessingDetail } from './paymentProcessingDetail';
import { PartyIdentification } from './partyIdentification';


/**
 * Further details on the credit transfer instruction
 */
export interface CreditTransferDetail { 
    identifiers?: Array<PaymentIdentification>;
    /**
     * Specifies the means of payment that will be used to move the amount of money. Possible values are:  Check, CreditTransfer. More specific values: ECheck, CreditCard, CommercialCreditCard, CheckCard, BusinessCheck, PinlessDebit, PINDebit, POS, Cash, ACHCredit, LockBox, RemoteCapture, EFTCredit, FedWire, ACHDebit, EFT, MoneyOrder, Coupon. 
     */
    paymentMethod: string;
    /**
     * Specifies the type of Payment. Possible values: LiquidityTransfer, OnUs, ACH, Wire, NotOnUs.    
     */
    paymentType: string;
    /**
     * Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party. 
     */
    amount?: string;
    /**
     * Tax amount to be deducted. 
     */
    taxAmount?: string;
    /**
     * Identification assigned by the account service institution (Servicer). Could be encoded (UUID). Also may be used as composite account identifier when overlaying the account code parts. <branch-type-subtype-number>         
     */
    creditorAccountId?: string;
    paymentProcessing?: PaymentProcessingDetail;
    /**
     * Specifies which party(ies) will pay charges due for processing of the instruction. BorneByDebtor, BorneByCreditor,  Shared, FollowingServiceLevel 
     */
    chargeBearerType?: string;
    creditor?: PartyIdentification;
}

