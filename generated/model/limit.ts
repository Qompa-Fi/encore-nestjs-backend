/**
 * PortX ORCA Account Management
 * PortX ORCA semantic and interaction is based on ISO 20022 and restricted to the US banking domain. The scope covers the following communication flows: bank account opening, maintenance, closing and reporting. In many cases, the financial institution will require additional documentation that is available as PDF or Word document. The recommended solution is to group one ORCA message (for example the account opening request) with these accompanying documents in one file archive. The archive establishes the link between the different documents. Every ORCA request message has an attribute to support the ISO 20022 digital signature.  
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: betiana.darderes@portx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AccountChargePayment } from './accountChargePayment';
import { GenericCode } from './genericCode';
import { LimitHistory } from './limitHistory';
import { DatePeriod } from './datePeriod';
import { Frequency } from './frequency';
import { Balance } from './balance';


/**
 * Value used for risk containment. 
 */
export interface Limit { 
    /**
     * Date and time at which the period starts.
     */
    fromDateTime?: string;
    /**
     * Date and time at which the period ends.
     */
    upToDateTime?: string;
    /**
     * Name of the limit in PascalCase. Possible values: NSF, UncollectedFunds, Overdraft, CreditLimit, CreditCard, Withdraw, CreditCardWithdraw, ForeignFeesWaived, CreditTransactions, DebitTransactions, ATMSurchargeReimbursement,    CashAdvance, ACHInTransfers, ACHOutTransfers, OverdraftProgram, Threshold, MinimumTransfer.  
     */
    name: string;
    /**
     * Specifies the type of risk management limit.         Bilateral, NetBilateral, IndirectBilateral, Global, MandatoryBilateral, DiscretionaryBilateral, DirectDebit, SingleCustomerDirectDebit, SingleFinancialInstitutionDirectDebit, TotalDailyCustomerDirectDebit, TotalDailyFinancialInstitutionDirectDebit, AutoCollateralisation, UnsecuredCredit, ExternalGuarantee, Revolving, NotRevolving. 
     */
    limitType?: string;
    /**
     * Channel type for which this limit applies. Possible values: OnlineATM, OfflineATM, ATM, SaleTerminal, : Check, ACHDebit, DebitCard, BillPayment 
     */
    channelType?: string;
    /**
     * Amount limit
     */
    amount?: string;
    /**
     * Amount limit currency.
     */
    currency?: string;
    /**
     * Number limit.
     */
    number?: number;
    /**
     * Indicates whether the limit is enabled or not.
     */
    enableIndicator?: boolean;
    /**
     * Indicates that the institution received customer consent to assess fees when the limit is exceeded. 
     */
    feesConsentIndicator?: boolean;
    /**
     * Indicates if the limit is calculated as a percentage. 
     */
    percentageIndicator?: boolean;
    /**
     * Value expressed as a positive or negarive percentage, rate expressed as a percentage, that is, in hundredths, for example, 0.7 is 7/10 of a percent, and 7.0 is 7%.     total number of digits: 11     number of digits in fractional part: 10     Max Value: 100 
     */
    percentage?: string;
    /**
     * Indicates whether the limit is temporary or not.
     */
    temporaryIndicator?: boolean;
    validityPeriod?: DatePeriod;
    /**
     * Renewal frequency
     */
    periodicity?: Frequency;
    /**
     * Amount limit used
     */
    usedAmount?: string;
    /**
     * Number limit used.
     */
    usedNumber?: number;
    /**
     * Value expressed as a positive or negarive percentage, rate expressed as a percentage, that is, in hundredths, for example, 0.7 is 7/10 of a percent, and 7.0 is 7%.     total number of digits: 11     number of digits in fractional part: 10     Max Value: 100 
     */
    usedPercentage?: string;
    /**
     * Specifies the current status of a limit.         Possible values are: Enabled, Disabled, Deleted, Requested, NotAuthorized (The limit is not authorized by the customer). Other values: CustomerEnrolled, CustomerNotEnrolled, InstitutionEnrolled. 
     */
    status?: string;
    statusDateAndtime?: string;
    history?: LimitHistory;
    balances?: Array<Balance>;
    /**
     * Additional limits codes. 
     */
    codes?: Array<GenericCode>;
    /**
     * Limit access condition. Possible values: BeforeTransfers, AfterTransfers: Overdraft Limit is accessed before or after automatic transfers. Other values: POSTransactions, ATMTransactions, when the customer authorize the payment of ATM or POS transactions, if the transaction was to overdraw the account. 
     */
    accessConditions?: Array<string>;
    notificationOptions?: Array<string>;
    /**
     * Payments methods to cover the amount limit overdraft. 
     */
    payments?: Array<AccountChargePayment>;
}

