/**
 * PortX ORCA Account Management
 * PortX ORCA semantic and interaction is based on ISO 20022 and restricted to the US banking domain. The scope covers the following communication flows: bank account opening, maintenance, closing and reporting. In many cases, the financial institution will require additional documentation that is available as PDF or Word document. The recommended solution is to group one ORCA message (for example the account opening request) with these accompanying documents in one file archive. The archive establishes the link between the different documents. Every ORCA request message has an attribute to support the ISO 20022 digital signature.  
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: betiana.darderes@portx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AccountChargePayment } from './accountChargePayment';
import { InterestRenewalDetails } from './interestRenewalDetails';
import { TaxForm } from './taxForm';
import { InterestCalculationRate } from './interestCalculationRate';
import { VariableInterestChanges } from './variableInterestChanges';
import { InterestCycle } from './interestCycle';
import { Frequency } from './frequency';
import { TemporalDuration } from './temporalDuration';
import { Balance } from './balance';


/**
 * Set of parameters used to calculate an interest. 
 */
export interface InterestCalculation { 
    /**
     * Name in PascalCase of the interest that applies to the account. For instance, Deposit. Also identifications of the interest or charge. 
     */
    name?: string;
    /**
     * Interest calculation code used by the account servicer. 
     */
    interestCode?: string;
    /**
     * An interest day count basis is a method used to calculate interest accrual over a period of time for loans and bonds. The method involves determining the number of days over which interest is being calculated, known as the accrual period. The resulting accrual period is then divided by a certain number to calculate the daily interest rate, which is applied to the principal balance to determine the interest payment. Possible Values: ActualActual, Actual360, Actual365, 365365, 360360, Monthly78ths, 365360, ActualSchedule, ScheduleSchedule. 
     */
    dayCountBasis?: string;
    /**
     * Specifies a parameter that apply at the interest day count basis. Possible Values:  LastInterest,  EqualPayment, InterestAndPrincipal, InterestSeparatedm, Amortized, AddOn, NegativeAmortization, Simple, FHLMC.  
     */
    calculationMethodOption?: string;
    /**
     * An accrued date is a hypothetical point in time when the interest should have been paid. 
     */
    accruedDate?: string;
    /**
     * A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format.
     */
    nextInterestDate?: string;
    /**
     * A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format.
     */
    lastInterestDate?: string;
    /**
     * The period funds are earning interest.
     */
    term?: TemporalDuration;
    /**
     * Indicates whether the interest is enabled for automatic charge. 
     */
    enableIndicator?: boolean;
    /**
     * Indicates the compounding method used for interest calculations. 
     */
    compoundingMethod?: string;
    /**
     * Frequency of the interest calculation and compounded during the term. 
     */
    compoundingFrequency?: Frequency;
    calculationFrequency?: Frequency;
    /**
     * Number of monetary units where the size of the decimal part is defined by the currency. Note:  total number of digits: 21 number of digits in fractional part: 8 maxInclusive: 9999999999999.99999999 minInclusive: 0 
     */
    oneDayInterest?: string;
    /**
     * Details on the interest payment. 
     */
    payment?: AccountChargePayment;
    /**
     * Total amounts related to an interest. Possible Values:  CurrentEarned, 2021AsOfDate, 2020AsOfDate, 2019AsOfDate, CutOffAvailable, CutOffAverageAvailable, CutOffAverageLedger, CutOffAverageMinimumLedger, CutOffLedger, CutOffMinimumLedger 
     */
    balances?: Array<Balance>;
    renewal?: InterestRenewalDetails;
    cycle?: InterestCycle;
    /**
     * The amount of automatic interest that was last posted to the account. 
     */
    lastCalculus?: string;
    /**
     * Identifies whether interest paid is reportable. 
     */
    reportingIndicator?: boolean;
    reportingOptions?: Array<string>;
    form?: TaxForm;
    /**
     * The frequency used in calculating the Regulation DD Annual Percentage Yield (APY) when the financial institution requires interest to be withdrawn (i.e. compounding interest is not an option.) The Regulation DD Compound Frequency overrides the interest frequency only in computing the APY. For example, an account with interest paid monthly by check but disclosed as annual compounding. 
     */
    annualPercentageYieldFrequency?: Frequency;
    /**
     * Annual Percentage Yield (APY) is a measure used in finance to express the total return on an investment, taking into account both the interest earned and the appreciation in the investment\'s value, over a specified period. It is expressed as a percentage and is often used for fixed income securities such as bonds, and money market accounts. 
     */
    annualPercentageYield?: string;
    /**
     * The number of calendar days processed since the last anniversary date 
     */
    daysSinceLastAnniversary?: number;
    /**
     * Rates involve on interest calculation.
     */
    rates?: Array<InterestCalculationRate>;
    /**
     * Specifies the type of interest rate. Some ISO 20022 compliant values are: Fixed, Forfeit, Variable, StepUp, Scheduled, Unscheduled, Discount, FixedRateUnderlyingExposureForLife, FixedRateUnderlyingExposureWithCompulsoryFutureSwitchToFloating, FixedWithFuturePeriodicResets, FloatingLinkedToIndex, FloatingRateUnderlyingExposureForLife, FloatingRateUnderlyingExposureWithCap, FloatingRateUnderlyingExposureWithFloor, FloatingRateUnderlyingExposureWithFloorAndCap, Modular, ObligorSwapped, SwicthOptionality, Tiered, StepFrequency, RateIndex, IndexFrequency. 
     */
    rateType?: string;
    /**
     * Specifies the type of tiered interest rate. Possible values:  Whole, Split, Dynamic. 
     */
    rateTieredType?: string;
    /**
     * Specifies the nature of the balance. Possible values: Current, Available, Pending, Opening, Blocked, Previous, RelatedBalance, OnHold, PendingLedger, Collected, LastAnniversary, Accrued, CurrentAccrued, PreviousAccrued, CurrentWithLastCalculus, CarriedAdjustment, PaidWithPenalties, Accrued, Penalty, CollectionLedger, LastLedger, CurrentLedger, Ledger, MinimumAvailable, MinimumLedger, Withheld, CurrentBooked, CurrentBook, LastDeposit, FloatAmount, Average, RegulationDDAvailable. Loan Balances: CashProceeds, the amount that a customer actually received, exclusive of insurance premiums, fees, and unearned discount; FinancedExpenses, indicates the amount of expenses an institution has financed for a borrower;  TotalInterest; AdditionalInterest, if the date of the first payment is beyond one month from the note date, the interest for the odd days will be earned during the first interest period; DeferredUnsecuredPrincipal, is the outstanding balance of an unsecured debt. The DUPB includes any accrued interest that is yet to be paid by the borrower. The deferral typically occurs due to bankruptcy or debt relief proceedings, which temporarily halt collection efforts by the original creditor; Charge Balances: Earned, RealTimeDeliveryMaximum, Current, Financed, Prepaid, CurrentEarned, CurrentEarnedOtherEscrow, InterestPaidToDate, InterestPaidThisYear, InterestPaidPreviousYear, InterestPaidLastStatement, InterestPaidThisYear, RevolvingCreditPaid, BasePaidToDate, TotalPastDue, Escrow, OtherEscrow, FinalAmount, FinalInterestAmount, Chapter4PreviousYear, Payments: Delinquent, FixPayment, Transaction, LoanPayOff 
     */
    rateAmountType?: string;
    /**
     * Indicates how the Past Due Rate is applied to past due loans. After a loan payment is past due after certain days, interest is earned retroactively from the payment due date. 
     */
    pastDueOptions?: Array<string>;
    variableInterests?: Array<VariableInterestChanges>;
}

