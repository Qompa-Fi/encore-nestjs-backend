/**
 * PortX ORCA Account Management
 * PortX ORCA semantic and interaction is based on ISO 20022 and restricted to the US banking domain. The scope covers the following communication flows: bank account opening, maintenance, closing and reporting. In many cases, the financial institution will require additional documentation that is available as PDF or Word document. The recommended solution is to group one ORCA message (for example the account opening request) with these accompanying documents in one file archive. The archive establishes the link between the different documents. Every ORCA request message has an attribute to support the ISO 20022 digital signature.  
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: betiana.darderes@portx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Balance } from './balance';


/**
 * Tax levied on income, at an established tax rate. 
 */
export interface Tax { 
    /**
     * Specifies the type of tax. Possible ISO values are: ValueAddedTaxOfZeroRate, Provincial, NationalTax, StateTax, WithholdingTax, CapitalGainTax, InterimProfitTax, StampDuty, WealthTax, InheritanceTax, SolidaritySurcharge, TaxCredit, Equalisation, GiftTax, ConsumptionTax, AlternativeMinimumTax, LocalTax, NationalFederalTax, PaymentLevyTax, StockExchangeTax, TransactionTax, TransferTax, ValueAddedTax, LocalBrokerCommission, ExecutingBrokerCommission, EUTaxRetention, Aktiengewinn1, Aktiengewinn2, Zwischengewinn, CustomsTax, Mietgewinn, GermanLocalTax3, GermanLocalTax4, GermanLocalTax2, WithholdingOfForeignTax, WithholdingOfLocalTax, CapitalLossCredit, FederalWithholding, StatelWithholding. 
     */
    taxType?: string;
    /**
     * Name of the tax in PascalCase. Possible values: Sales. 
     */
    name?: string;
    /**
     * Rate applied on a basis amount to calculate the withholding. 
     */
    rate?: string;
    /**
     * Indicates whether the tax is automatically debited from the defined account. 
     */
    debitIndicator?: boolean;
    /**
     * Flag to indicate that the tax should be reported to the party. 
     */
    taxReportingIndicator?: boolean;
    /**
     * Total amounts related to the tax type
     */
    balances?: Array<Balance>;
}

