/**
 * PortX ORCA Account Management
 * PortX ORCA semantic and interaction is based on ISO 20022 and restricted to the US banking domain. The scope covers the following communication flows: bank account opening, maintenance, closing and reporting. In many cases, the financial institution will require additional documentation that is available as PDF or Word document. The recommended solution is to group one ORCA message (for example the account opening request) with these accompanying documents in one file archive. The archive establishes the link between the different documents. Every ORCA request message has an attribute to support the ISO 20022 digital signature.  
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: betiana.darderes@portx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { GenericTransactionCode } from './genericTransactionCode';


/**
 * Posting to an account that results in an increase or decrease to a balance.
 */
export interface LedgerTransaction { 
    /**
     * Unique reference as assigned by the account servicing institution to unambiguously identify the transaction.
     */
    transactionId: string;
    /**
     * Number of monetary units where the size of the decimal part is defined by the currency. Note:  total number of digits: 21 number of digits in fractional part: 8 maxInclusive: 9999999999999.99999999 minInclusive: -9999999999999.99999999 
     */
    amount?: string;
    /**
     * Specifies if an operation is an increase or a decrease. Possible values names are: Credit, Debit. 
     */
    creditDebitIndicator?: string;
    description?: string;
    /**
     * Specifies the status of an entry on the books of the account servicer. Some possible ISO 20022 compliant values are:   Booked, Future, Information, Pending. 
     */
    status: string;
    /**
     * Indicates whether or not the transaction is the result of a reversal. Usage: This element should only be present if the entry is the result of a reversal. If the CreditDebitIndicator is Credit and ReversalIndicator is Yes, the original operation was a debit entry. If the CreditDebitIndicator is Debit and ReversalIndicator is Yes, the original operation was a credit entry. 
     */
    reversalIndicator?: boolean;
    /**
     * Date and time at which the transaction is created. 
     */
    creationDate: string;
    /**
     * Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit entry.   Usage: If entry status is pending and value date is present, then the value date refers to an expected/requested value date. 
     */
    valueDate?: string;
    /**
     * Date and time when an entry is posted to an account on the account servicer\'s books. Usage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date. 
     */
    bookingDate?: string;
    /**
     * Additional transaction codes.
     */
    codes?: Array<GenericTransactionCode>;
    /**
     * The current balance at the transaction creation date.
     */
    currentBalance?: string;
    /**
     * Additional information that cannot be captured in the structured elements and/or any other specific block. If this information need to be converted in ISO Messages, must be ISO 20022 compliant: it requires development of a compliant message extension model and its components must be registered in the ISO 20022 Data Dictionary. https://www.iso20022.org/catalogue-messages/additional-content-messages/supplementary-data 
     */
    supplementaryData?: object;
}

