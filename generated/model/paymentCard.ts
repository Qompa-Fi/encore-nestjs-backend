/**
 * PortX ORCA Account Management
 * PortX ORCA semantic and interaction is based on ISO 20022 and restricted to the US banking domain. The scope covers the following communication flows: bank account opening, maintenance, closing and reporting. In many cases, the financial institution will require additional documentation that is available as PDF or Word document. The recommended solution is to group one ORCA message (for example the account opening request) with these accompanying documents in one file archive. The archive establishes the link between the different documents. Every ORCA request message has an attribute to support the ISO 20022 digital signature.  
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: betiana.darderes@portx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { PaymentCardIdentification } from './paymentCardIdentification';
import { GenericCode } from './genericCode';
import { InterestCalculationDescriptor } from './interestCalculationDescriptor';
import { CardProviderOffer } from './cardProviderOffer';
import { PaymentCardHistory } from './paymentCardHistory';
import { PersonDescriptor } from './personDescriptor';
import { Algorithm } from './algorithm';
import { ChargeCalculationDescriptor } from './chargeCalculationDescriptor';
import { CreditCardStatement } from './creditCardStatement';
import { Restriction } from './restriction';
import { ServicerAlert } from './servicerAlert';
import { SpotDate } from './spotDate';
import { Limit } from './limit';
import { PaymentCardArt } from './paymentCardArt';
import { RelatedAccount } from './relatedAccount';


export interface PaymentCard { 
    identifiers?: Array<PaymentCardIdentification>;
    /**
     * Specifies the funding source type of payment card. Possible Values: Credit, Debit, Prepaid, Charge, DeferredDebit, CreditGateway. 
     */
    fundingSourceType?: string;
    productId?: string;
    /**
     * Indicates whether the payment card is business or not.
     */
    businessIndicator?: boolean;
    /**
     * Indicates whether the payment card is digital or physical.     
     */
    digitalIndicator?: boolean;
    /**
     * Identification of the account servicer institution at branch level or center level. To overlay the codes to produce a unique identifier the following expresion is used: BranchRegionCode-BranchSubdivisionCode. 
     */
    cardBranchId?: string;
    /**
     * Primary Account Number (PAN) of the card. 
     */
    number: string;
    /**
     * Specifies the card holder type of payment card. Possible Values: Primary, Additional, Authorized, Guarantor. 
     */
    cardHolderType?: string;
    /**
     * Specifies the name on the card if overriding the name from the card holder. 
     */
    nameOnCard?: string;
    /**
     * Specifies the business name on the card. 
     */
    businessNameOnCard?: string;
    art?: PaymentCardArt;
    /**
     * Account used as a reference for the card creation. Could be a cash or loan account owned by the primary card holder. 
     */
    referenceAccountId?: string;
    /**
     * Account that provides the payment card transactions. The account is the funding source for the card. Could be a cash or loan account linked to the debit card or a credit card account. A card can have one or many accounts. 
     */
    relatedAccounts?: Array<RelatedAccount>;
    /**
     * Year and month the card is available for use.
     */
    startDate?: string;
    /**
     * Year and month the card expires.
     */
    expiryDate?: string;
    /**
     * Date the card is ordered
     */
    orderedDate?: string;
    activationDates?: Array<SpotDate>;
    /**
     * Indicates the number of activation attempts since the last reset. Applies to debit cards only. 
     */
    activationAttempts?: number;
    /**
     * Security code written on the card, sometimes called card security code (CSC). 
     */
    securityCode?: string;
    /**
     * PIN is the 4 digit security code that is used to authenticate the user and allow them access to the associated accounts of the card. 
     */
    pIN?: string;
    /**
     * Pin Retries Allowed 
     */
    pINRetries?: number;
    /**
     * Identifies a card inside a set of cards with the same number (or PAN). 
     */
    sequenceNumber?: string;
    /**
     * Brand name of the card. 
     */
    brand?: string;
    limits?: Array<Limit>;
    interests?: Array<InterestCalculationDescriptor>;
    restrictions?: Array<Restriction>;
    charges?: Array<ChargeCalculationDescriptor>;
    algorithms?: Array<Algorithm>;
    /**
     * Codes to clasify payment cards. Possible code names: ClassCode 
     */
    codes?: Array<GenericCode>;
    /**
     * Additional information that cannot be captured in the structured elements and/or any other specific block. If this information need to be converted in ISO Messages, must be ISO 20022 compliant: it requires development of a compliant message extension model and its components must be registered in the ISO 20022 Data Dictionary. https://www.iso20022.org/catalogue-messages/additional-content-messages/supplementary-data 
     */
    supplementaryData?: object;
    /**
     * Identification assigned by the card provider. A cardId is a unique identifier associated with a specific cardholder. Establishing the card ID is the first step. The card ID is used as the card reference. When a card is replaced, a new card ID must be requested for the new PAN.      
     */
    readonly cardId?: string;
    /**
     * Card holder person description
     */
    cardHolder?: PersonDescriptor;
    statement?: CreditCardStatement;
    /**
     * Card provider offers assigned to the PAN. 
     */
    offers?: Array<CardProviderOffer>;
    /**
     * Specifies the status of payment card. Some possible values are: AssignPIN, Active, Blocked, Closed, Expedite, Expired, HotCarded, Renewed, Inactive, Issued, Lost, Restricted, Stolen, Suspended. 
     */
    status?: string;
    statusDate?: string;
    /**
     * Specifies the status reason of payment card. Some possible values are: ActivationBeforeAvailableDate, CardRecordNotFound, CardLostOrStolen, NoActivationRequired, ActivationRequired, ExpDateNotMatch, AlreadyActivated, AttemptAfterDeadline, MaxAttemprsExceeded, CallerIdInvalid, ActivationCodeInvalid, PinCheckNotPerformed, InvalidActivationMethod, IvrAuthorizationFailed, FirstPinId 
     */
    statusReason?: string;
    history?: PaymentCardHistory;
    /**
     * Customer alerts to be received by the account servicer.
     */
    servicerAlerts?: Array<ServicerAlert>;
}

