/**
 * PortX ORCA Account Management
 * PortX ORCA semantic and interaction is based on ISO 20022 and restricted to the US banking domain. The scope covers the following communication flows: bank account opening, maintenance, closing and reporting. In many cases, the financial institution will require additional documentation that is available as PDF or Word document. The recommended solution is to group one ORCA message (for example the account opening request) with these accompanying documents in one file archive. The archive establishes the link between the different documents. Every ORCA request message has an attribute to support the ISO 20022 digital signature.  
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: betiana.darderes@portx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ServicerAlert } from './servicerAlert';
import { CustomerIdentificationProgram } from './customerIdentificationProgram';
import { Employment } from './employment';
import { IdentityQuestion } from './identityQuestion';
import { AmountRange } from './amountRange';
import { DatePeriod } from './datePeriod';
import { TemporalDuration } from './temporalDuration';
import { CreditReview } from './creditReview';
import { RiskMeasure } from './riskMeasure';


/**
 * Information to support Know Your Customer (KYC) processes.
 */
export interface PersonProfile { 
    /**
     * Specifies the customer’s money laundering risk. Possible values: High, Medium, Low, NotDetermined 
     */
    riskLevel?: string;
    riskCategories?: Array<RiskMeasure>;
    /**
     * Used to identify customers that present a risk to the bank as defined by the Bank Secrecy Act. For example, use this code to identify and monitor accounts suspected of fraud, kiting or money laundering. 
     */
    bSARiskCode?: number;
    creditReview?: CreditReview;
    /**
     * Code used for reporting to the credit bureaus. This code is used to report the trade line of a credit account to the credit bureau agencies.  
     */
    creditBureauReportCode?: string;
    /**
     * The ECOA code indicates how customer account information is reported to the Credit Bureau in keeping with the Equal Credit Opportunity Act. 
     */
    eCOACode?: string;
    /**
     * Currency transaction report (CTR) exemption. A CTR is a report that must be filed by banks for any transaction involving currency of $10,000 or more. However, certain entities and transactions are exempt from this reporting requirement. 
     */
    cTRExemptIndicator?: boolean;
    /**
     * Indicates whether the party is to be excluded from OFAC Reporting. 
     */
    oFACReportingIndicator?: boolean;
    /**
     * Name by which a party is known and which is usually used to identify that party.
     */
    previousFinancialInstitution?: string;
    /**
     * Name by which a party is known and which is usually used to identify that party.
     */
    referredByWhom?: string;
    /**
     * Specifies the status of money laundering identification procedures. Possible Values: PassedNotChecked, ExemptBelowLimit, ClientMoneyTypeExempt, AuthorizedCredit, PostalOrElectronicPaymentExempt 
     */
    moneyLaunderingCheck?: string;
    /**
     * Specifies the type of Know Your Customer (KYC) or anti-money laundering due diligence to which the investor has been subjected. Possible Values: Ordinary, Simple, Enhanced. 
     */
    knowYourCustomerCheck?: string;
    timeAtCurrentAddress?: TemporalDuration;
    /**
     * Date of Residence in the current household. 
     */
    dateAtCurrentAddress?: string;
    yearsAtCurrentAddress?: number;
    /**
     * Indicates the main sources of the money.
     */
    sourceOfWealth?: string;
    /**
     * Indicates the political affiliation of the Party. Possible values could be: Democrat, Independent, Republican. 
     */
    politicalAffiliation?: string;
    /**
     * A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format.
     */
    lostCustomerDate?: string;
    /**
     * Used for regulatory purposes by the bank to track how long closed account history has been maintained for a customer. Possible values are:   Competition, Deceased, Dissatisfied, Moved, MergedEntity, CeasedOperation 
     */
    lostCustomerReason?: string;
    /**
     * A customer type of a bank account can be classified into different categories based on the account\'s features, purpose, and benefits. Possible Values: Personal, Business, Consumer, Organization, ThirdParty, Estate, Employer. 
     */
    customerType?: string;
    /**
     * Customer alerts to be received by the account servicer.
     */
    servicerAlerts?: Array<ServicerAlert>;
    /**
     * The insider type information is used to provide info to Regulation 0.  The Regulation 0 is a Federal Reserve regulation that places limits and stipulations on the credit extensions a member bank can offer to its executive officers, principal shareholders, and directors. Possible values:     Director, Employee, Officer, PrincipalShareholder, Shareholder, Executive, ServiceCorporationEmployee, Child, Spouse, Parent, Relative, AffiliateFinancialInstitution, HoldingCompany, MainShareHolder, RelationshipInterest.         
     */
    insiderType?: string;
    /**
     * Indicates whether the person allow distributing  personal information to third parties. This field is used to identify customers that opt-out of distributing nonpublic personal information about them to third parties. 
     */
    privacyNoticedIndicator?: boolean;
    /**
     * Privacy notice option. Possible Values: CustomerCanBeDisclosed, CustomerOptOut 
     */
    privacyNoticeOption?: string;
    customerIdentificationProgram?: CustomerIdentificationProgram;
    /**
     * Assessment of the customer’s behaviour at the time of the account opening application. Possible Values: Standard, NonStandard, Reluctant.  
     */
    customerConductClassification?: string;
    /**
     * Indicates if the person has family medical insurance coverage available.
     */
    familyMedicalInsuranceIndicator?: boolean;
    /**
     * Indicates whether the person is is service member/military. 
     */
    militaryMemberIndicator?: boolean;
    militaryPeriod?: DatePeriod;
    salaryRange?: AmountRange;
    /**
     * Number of monetary units where the size of the decimal part is defined by the currency. Note:  total number of digits: 21 number of digits in fractional part: 8 maxInclusive: 9999999999999.99999999 minInclusive: 0 
     */
    residenceValue?: string;
    /**
     * Number of monetary units where the size of the decimal part is defined by the currency. Note:  total number of digits: 21 number of digits in fractional part: 8 maxInclusive: 9999999999999.99999999 minInclusive: 0 
     */
    residenceMortage?: string;
    /**
     * Represents available individual employment status. Possible values: Contract, Employed, Homemaker, Retired, SelfEmployed, Student, Temporary, Unemployed, BankEmployed. 
     */
    employmentStatus?: string;
    /**
     * Very Important People Program Status. Possible Values: Novice, Pro, Elite 
     */
    vIPStatus?: string;
    employments?: Array<Employment>;
    /**
     * Indicates whether is a bank employer.  
     */
    employeeIndicator?: boolean;
    /**
     * Number of monetary units where the size of the decimal part is defined by the currency. Note:  total number of digits: 21 number of digits in fractional part: 8 maxInclusive: 9999999999999.99999999 minInclusive: 0 
     */
    annualIncome?: string;
    /**
     * Number of monetary units where the size of the decimal part is defined by the currency. Note:  total number of digits: 21 number of digits in fractional part: 8 maxInclusive: 9999999999999.99999999 minInclusive: 0 
     */
    monthlyIncome?: string;
    /**
     * Number of monetary units where the size of the decimal part is defined by the currency. Note:  total number of digits: 21 number of digits in fractional part: 8 maxInclusive: 9999999999999.99999999 minInclusive: 0 
     */
    grossMonthPayAmount?: string;
    /**
     * Number of monetary units where the size of the decimal part is defined by the currency. Note:  total number of digits: 21 number of digits in fractional part: 8 maxInclusive: 9999999999999.99999999 minInclusive: 0 
     */
    netMonthPayAmount?: string;
    monthPayDate?: string;
    yearsOfEducation?: number;
    /**
     * Indicates whether the person is a politically exposed person (PEP). Is one who has been entrusted with a prominent public function. A PEP generally presents a higher risk for potential involvement in bribery and corruption. 
     */
    politicallyExposedPerson?: boolean;
    /**
     * Indicates whether the person has subscribed to an Identity Theft service.
     */
    identityTheftServiceIndicator?: boolean;
    identityQuestions?: Array<IdentityQuestion>;
    /**
     * Indicates if the borrower is covered under the Military Lending Act. 
     */
    coveredByMilitaryLendingActIndicator?: boolean;
}

