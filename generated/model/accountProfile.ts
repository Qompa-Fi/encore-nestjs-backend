/**
 * PortX ORCA Account Management
 * PortX ORCA semantic and interaction is based on ISO 20022 and restricted to the US banking domain. The scope covers the following communication flows: bank account opening, maintenance, closing and reporting. In many cases, the financial institution will require additional documentation that is available as PDF or Word document. The recommended solution is to group one ORCA message (for example the account opening request) with these accompanying documents in one file archive. The archive establishes the link between the different documents. Every ORCA request message has an attribute to support the ISO 20022 digital signature.  
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: betiana.darderes@portx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CreditRankingScale } from './creditRankingScale';
import { BankruptcyProfile } from './bankruptcyProfile';
import { Frequency } from './frequency';
import { RiskMeasure } from './riskMeasure';


export interface AccountProfile { 
    /**
     * Account profile category. Possible Values: Personal, NonPersonal.  
     */
    profileType?: string;
    /**
     * Loundery risk level
     */
    riskLevel?: string;
    /**
     * The quality score is based on a borrower\'s credit history, collateral, and the likelihood of repayment. 
     */
    qualityScore?: string;
    riskMeasures?: Array<RiskMeasure>;
    /**
     * Borrower credit ranking scores  
     */
    creditRankingScales?: Array<CreditRankingScale>;
    bankruptcy?: BankruptcyProfile;
    /**
     * Indicates the frequency that the history profile payment status is established. Values are dependent upon credit bureau standards. 
     */
    paymentHistoryFrequency?: Frequency;
    /**
     * Indicates whether the Payment History Profile will be recalculated. Possible Values: Default, NotRecalculate, RecalculateAndSetToDefault, RecalculateAndSetToNot. 
     */
    paymentHistoryOption?: string;
}

